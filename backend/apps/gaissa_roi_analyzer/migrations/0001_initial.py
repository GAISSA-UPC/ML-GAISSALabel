# Generated by Django 4.2.21 on 2025-06-08 11:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisMetricValue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('baselineValue', models.FloatField(verbose_name='Baseline Value')),
            ],
            options={
                'verbose_name': 'Analysis Metric Value',
                'verbose_name_plural': 'Analysis Metric Values',
            },
        ),
        migrations.CreateModel(
            name='MLTactic',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Tactic Name')),
                ('information', models.TextField(blank=True, null=True, verbose_name='Information')),
            ],
            options={
                'verbose_name': 'ML Tactic',
                'verbose_name_plural': 'ML Tactics',
            },
        ),
        migrations.CreateModel(
            name='ModelArchitecture',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Architecture Name')),
                ('information', models.TextField(blank=True, null=True, verbose_name='Information')),
            ],
            options={
                'verbose_name': 'Model Architecture',
                'verbose_name_plural': 'Model Architectures',
            },
        ),
        migrations.CreateModel(
            name='ROIAnalysis',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='roi_analyses', to='core.country', verbose_name='Country of Deployment')),
                ('model_architecture', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='roi_analyses', to='gaissa_roi_analyzer.modelarchitecture', verbose_name='Model Architecture')),
            ],
            options={
                'verbose_name': 'ROI Analysis',
                'verbose_name_plural': 'ROI Analyses',
            },
        ),
        migrations.CreateModel(
            name='ROIMetric',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Metric Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('unit', models.CharField(blank=True, max_length=50, null=True, verbose_name='Unit')),
                ('is_energy_related', models.BooleanField(default=False, verbose_name='Is Energy Related')),
                ('higher_is_better', models.BooleanField(default=False, verbose_name='Higher is better')),
                ('min_value', models.FloatField(blank=True, null=True, verbose_name='Minimum Value')),
                ('max_value', models.FloatField(blank=True, null=True, verbose_name='Maximum Value')),
            ],
            options={
                'verbose_name': 'ROI Metric',
                'verbose_name_plural': 'ROI Metrics',
            },
        ),
        migrations.CreateModel(
            name='TacticSource',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='Source Title')),
                ('url', models.URLField(max_length=500, verbose_name='Source URL')),
            ],
            options={
                'verbose_name': 'Tactic Source',
                'verbose_name_plural': 'Tactic Sources',
            },
        ),
        migrations.CreateModel(
            name='EnergyAnalysisMetricValue',
            fields=[
                ('analysismetricvalue_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gaissa_roi_analyzer.analysismetricvalue')),
                ('energy_cost_rate', models.DecimalField(decimal_places=4, help_text='The cost per kilowatt-hour of energy in €', max_digits=10, verbose_name='Energy Cost Rate (€/kWh)')),
                ('implementation_cost', models.DecimalField(decimal_places=2, help_text='Additional costs for implementing this energy optimization tactic in €', max_digits=10, verbose_name='Implementation Costs (€)')),
            ],
            options={
                'verbose_name': 'Energy Metric Analysis Value',
                'verbose_name_plural': 'Energy Metric Analysis Values',
            },
            bases=('gaissa_roi_analyzer.analysismetricvalue',),
        ),
        migrations.CreateModel(
            name='ROIAnalysisCalculation',
            fields=[
                ('roianalysis_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gaissa_roi_analyzer.roianalysis')),
                ('dateRegistration', models.DateTimeField(auto_now_add=True, verbose_name='Registration Date')),
            ],
            options={
                'verbose_name': 'ROI Analysis Calculation',
                'verbose_name_plural': 'ROI Analysis Calculations',
            },
            bases=('gaissa_roi_analyzer.roianalysis',),
        ),
        migrations.CreateModel(
            name='TacticParameterOption',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Parameter Name')),
                ('value', models.CharField(max_length=255, verbose_name='Parameter Value')),
                ('tactic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameter_options', to='gaissa_roi_analyzer.mltactic', verbose_name='Tactic')),
            ],
            options={
                'verbose_name': 'Tactic Parameter Option',
                'verbose_name_plural': 'Tactic Parameter Options',
                'unique_together': {('tactic', 'name', 'value')},
            },
        ),
        migrations.AddField(
            model_name='roianalysis',
            name='tactic_parameter_option',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='roi_analyses', to='gaissa_roi_analyzer.tacticparameteroption', verbose_name='Tactic Parameter Option'),
        ),
        migrations.AddField(
            model_name='mltactic',
            name='applicable_metrics',
            field=models.ManyToManyField(blank=True, related_name='applicable_tactics', to='gaissa_roi_analyzer.roimetric', verbose_name='Applicable Metrics'),
        ),
        migrations.AddField(
            model_name='mltactic',
            name='compatible_architectures',
            field=models.ManyToManyField(blank=True, related_name='compatible_tactics', to='gaissa_roi_analyzer.modelarchitecture', verbose_name='Compatible Architectures'),
        ),
        migrations.AddField(
            model_name='mltactic',
            name='sources',
            field=models.ManyToManyField(related_name='tactics', to='gaissa_roi_analyzer.tacticsource', verbose_name='Sources'),
        ),
        migrations.AddField(
            model_name='analysismetricvalue',
            name='analysis',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metric_values', to='gaissa_roi_analyzer.roianalysis', verbose_name='ROI Analysis'),
        ),
        migrations.AddField(
            model_name='analysismetricvalue',
            name='metric',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='analysis_values', to='gaissa_roi_analyzer.roimetric', verbose_name='ROI Metric'),
        ),
        migrations.CreateModel(
            name='ROIAnalysisResearch',
            fields=[
                ('roianalysis_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gaissa_roi_analyzer.roianalysis')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='roi_analysis_researches', to='gaissa_roi_analyzer.tacticsource', verbose_name='Source')),
            ],
            options={
                'verbose_name': 'ROI Analysis Research',
                'verbose_name_plural': 'ROI Analysis Researches',
            },
            bases=('gaissa_roi_analyzer.roianalysis',),
        ),
        migrations.CreateModel(
            name='ExpectedMetricReduction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('expectedReductionValue', models.FloatField(verbose_name='Expected Reduction Value')),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gaissa_roi_analyzer.roimetric', verbose_name='ROI Metric')),
                ('model_architecture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gaissa_roi_analyzer.modelarchitecture', verbose_name='Model Architecture')),
                ('tactic_parameter_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gaissa_roi_analyzer.tacticparameteroption', verbose_name='Tactic Parameter Option')),
            ],
            options={
                'verbose_name': 'Expected Metric Reduction',
                'verbose_name_plural': 'Expected Metric Reductions',
                'unique_together': {('model_architecture', 'tactic_parameter_option', 'metric')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='analysismetricvalue',
            unique_together={('analysis', 'metric')},
        ),
    ]
